
# Schedule 

**Subject to change with minimal notice.**

### Week 1: Program structure ###

* Wednesday, January 4. [Lecture
  1](lectures/lecture01/lecture01.html): Introduction.  CS in arts,
  sciences, engineering.  Simple programs and the program counter.
  [Short assignment 1 (printed logo)](shortassign/logo/sa_logo.html)
  out.
* Friday, January 6. [Lecture 2](lectures/lecture02/lecture02.html):
  Abstraction, functions, graphics, and coding style.
     
### Week 2: Animation ###

* Monday, January 9.  [Lecture 3](lectures/lecture03/lecture03.html):
  Variables, memory, data types, expressions, and operators.  [Short
  assignment 2 (sketch)](shortassign/sketch/sa_sketch.html) out.
* Wednesday, January 11.  [Lecture
  4](lectures/lecture04/lecture04.html): Boolean expressions.  Flow of
  control: while-loops and if-statements.  [Short assignment 3 (how
  rich am I?)](shortassign/rich/sa_rich.html) out.
* Friday, January 13.  [Lecture 5](lectures/lecture05/lecture05.html):
  More on flow of control.  Functions: parameters and return values.
  Built-in functions.  Random numbers.  Debugging.  [Short assignment
  4 (string art)](shortassign/stringart/sa_stringart.html) out.

<!-- Section 1: Program design (coins and change), boolean expressions, and -->
<!-- flow of control. -->

### Week 3: Animation, user input, and lists ###

* Monday, January 16.  *No class: MLK Day.*
* Wednesday, January 18.  [Lecture
  6](lectures/lecture06/lecture06.html): Mouse and keyboard input.
  [Short assignment 5
  (chalkboard)](shortassign/chalkboard/sa_chalkboard.html) out.
* Thursday, January 19 (x-hour).  [Lecture
  7](lectures/lecture07/lecture07.html): Lists.  For loops.
* Friday, January 20. [Lecture 8](lectures/lecture08/lecture08.html):
  List algorithms.  Nested loops. Selection sort.  [Short assignment 6
  (moving blocks)](shortassign/movingblocks/sa_movingblocks.html) out.

<!-- Section 2: More on flow of control (robot simulator).  Lists and -->
<!-- algorithm design: selection sort on a list. -->

### Week 4: Classes and objects ###

* Monday, January 23. [Lecture 9](lectures/lecture09/lecture09.html):
  Gravity and springs.  Multi-body physics.  [Lab 1
  (pong)](labs/pong/lab_pong.html) Lab 1 out.
  <!-- [Short assignment 6 (insertion
  sort)](shortassign/insertion/sa_insertion.html) out. -->
* Wednesday, January 25.  [Lecture
  10](lectures/lecture10/lecture10.html): Introduction to classes and
  objects.  Lists of objects.
* Thursday, January 26 (x-hour). Optional review session.  **Exam 1,
  6:00 pm to 9:00 pm, Life Sciences Center, Room 100 (Oopik Auditorium).**
* Friday, January 27.  <!-- [Lecture
  10](lectures/lecture10/lecture10.html), --> More on classes and
  objects. <!-- [Short assignment 7
  (clock)](shortassign/clock/sa_clock.html) out. -->

### Week 5: Object-oriented design ###

* Monday, January 30.  [Lecture
  11](lectures/lecture11/lecture11.html): Object-oriented design: the
  Game of Life.  Lab 1 due.  [Lab 2 (gravity
  simulator)](labs/gravity/lab_gravity.html) Lab 2 out.  [Short
  assignment 7](shortassign/timer/sa_timer.html) out.
* Wednesday, February 1.  <!-- [Lecture
  11](lectures/lecture11/lecture11.html): --> More on object-oriented
  design.
* Friday, February 3.  Yet more on object-oriented design.

### Week 6: Algorithms and recursion  ###

* Monday, February 6. [Lecture 12](lectures/lecture12/lecture12.html):
  The call stack.  Recursion, the recursion tree.  Infinite recursion.
  [Short assignment 8](shortassign/binarysearch/sa_binarysearch.html)
  out.  Lab 2 due.
* Wednesday, February 8.  [Lecture
  13](lectures/lecture13/lecture13.html): More on recursion.  Analysis
  of algorithm running time.  Big-O notation.  Binary search vs. linear
  search.
* Thursday, February 9 (x-hour).  [Lecture
  14](lectures/lecture14/lecture14.html): More on analysis of
  algorithm running time.  Merge sort.  [Short Assignment
  9](shortassign/insertion/sa_insertion.html) out.
* Friday, February 10.  *No class: Carnival holiday.*

### Week 7: Data structures ###

* Monday, February 13.  [Lecture
  15](lectures/lecture15/lecture15.html): Finish merge sort.  Linked
  lists.  [Lab 3 (quicksort)](labs/quicksort/lab_quicksort.html) out.
  [Short assignment 10](shortassign/file/sa_file.html) out.
* Wednesday, February 15.  [Lecture
  16](lectures/lecture16/lecture16.html): Finish linked lists.
  Dictionaries.  [Short assignment
  11](shortassign/josephus/sa_josephus.html) out.
* Friday, February 17.  Guest lecture from Kate Yee of Career
  Services.
  
### Week 8: Graphs and cryptography ###

* Monday, February 20.  [Lecture
  17](lectures/lecture17/lecture17.html): Graphs.
  Breadth-first-search on a graph.  Lab 3 due.  [Lab 4
  (Dartmouth pathfinder)](labs/bfs/lab_bfs.html) out.
* Wednesday, February 22.  [Lecture
  18](lectures/lecture18/lecture18.html): Fundamental principles of
  cryptography.
* Thursday, February 23 (x-hour). Optional review session.  **Exam 2,
  6:00 pm to 9:00 pm, Life Sciences Center, Room 100 (Oopik Auditorium).**
* Friday, February 24.  More on cryptography.
 
### Week 9: Python features, finite automata, and computer organization ###

* Monday, February 27.  [Lecture
  19](lectures/lecture19/lecture19.html): Abstract data types and
  other Python goodies.  Lab 4 due.  Lab 5 out.
* Wednesday, February 29.  [Lecture
  20](lectures/lecture20/lecture20.html).  Finite automata.  (Preview
  of some material from CS 39.)
* Friday, March 2.  [Lecture 21](lectures/lecture21/lecture21.html).
  Hard problems: NP-completeness.  (More preview of material from CS
  39.)
  
### Week 10: Next steps ###

* Monday, March 5.  [Lecture
  22](lectures/lecture22/lecture22.html). More on NP-completeness.
  Parallel computing.
* Wednesday, March 7.  More on parallel computing.  Lab 5 due.
* Thursday, March 8.  Optional review session, 10:00 am to 12:00 noon,
  008 Kemeny.
* Sunday, March 11.  **Final exam, 11:30 am to 2:30 pm, 008 Kemeny.**
