1. SETTING UP THE SERVER

The easiest way to set up a server for our Node.js application is through Heroku (link this to: heroku.com). If you've never worked with Heroku before, follow these directions here (link "here" to a page on our website). If you already have an account, follow these (link) directions instead. 


STARTING FRESH WITH HEROKU

Steps:
1. Create a Heroku account
2. Download the Heroku Toolbelt
3. Set up a public key
4. Create an empty application
5. Set up MongDB database 
6. Clone our application github code
7. Link the Heroku app to our github code
8. Run the application

* Before we start, make sure you have access to a command shell. The command shell will be used to install the Toolbelt, set up the public key, and incorporate our github code into Heroku. 

Set Up a Heroku Account

To set up an account on Heroku, navigate to this (link) site. It's very straightfoward -- your Heroku account is tied to your email and after signing up, Heroku will send you a confirmation email. 

<Screen shot>

After creating an account with Heroku, you should be able to navigate to your dashboard:

<Screen shot>

If you had any apps on Heroku, you would see them here. Before creating our app, let's download the Heroku Toolbelt and set up our public key. 

Install the Heroku Toolbelt

At the top of your dashboard, there should be a link to download the Heroku Toolbelt. If not, click here (https://devcenter.heroku.com/articles/quickstart#step-2-install-the-heroku-toolbelt).

After installing the Heroku Toolbelt, you will have access to the heroku command from your command shell. 

Set Up Your Public Key
To set up your public key, follow the directions here (https://devcenter.heroku.com/articles/quickstart#step-3-login). 

The directions essentially boil down to:
1. Open the terminal
2. Login to heroku with this command:
$ heroku login

At this point, the shell should display a message if a public key is not found. It will ask you if you want to generate one. If you don't have a public key, generate one. 

Create an Empty Application

Let's return back to the heroku dashboard. Since you don't have any applications, click on "Create a new app." 

A window will pop up asking you to name your application. After deciding on a name (or not -- Heroku can generate a name for you), you now have a new application!

Set Up MongDB Database

If you click on your app from the Heroku Dashboard, you can access this page:

<Screen shot>

Choose the plan that you want and the new application 

Click on "Get Add-ons" and click on the "MongoLab" icon. "MongoLab" is a MongoDB Heroku add-on. 

This page should come up:

<Screen shot>

Choose the plan you want and select the app we just created. In order to use the MongoLab add-on, add your billing information at heroku.com/verify.

<Screen shot>

You have to do this, even if you chose the "Sandbox" plan, which is free. 

After you add the MongoLab add-on, return to your Heroku dashboard (you can do this by clicking on the "Apps" link on the menu bar at the top of the page). 

Click on your app. Now we have MongoLab as one of our Add-ons:

<Screenshot> 

If you click on the MongoLab add-on, you'll come to this page:

<Screenshot>

This is the user interface for our Mongo database. You can add users to the database, which means that they can add and delete entries from the database. You need to create at least one user so that the app can access your database.

To add a user, click on the "Users" tab and then select "Add database user." 

At the top of the MongoDB webpage, you'll see this:

"To connect using a driver via the standard URI..." <ScreenShot>

When you run your app, you'll have to use this URI -- substituting <dbuser> and <dbpassword> with your username and password -- to connect the app to the database you just created.

Cloning the Application Code






